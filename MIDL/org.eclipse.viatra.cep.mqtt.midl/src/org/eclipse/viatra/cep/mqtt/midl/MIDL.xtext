grammar org.eclipse.viatra.cep.mqtt.midl.MIDL with org.eclipse.xtext.common.Terminals

generate mIDL "http://www.eclipse.org/viatra/cep/mqtt/midl/MIDL"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

IoTSystem:
	(
		(MqttSetup
		(payloads += Payload)+
		(sensors += Sensor)+) | Session
	)
;

MqttSetup:
	"mqttSetup" "{"
		"brokerUrl" brokerUrl = STRING
	"}" 
;

Sensor:
	"sensor" name = ID "{"
		"qos" qos = INT
		"lastReceivedPayload" lastReceivedPayload=[Payload]
	"}"
;

Payload:
	"payload" name = ID "{"
		(dataParameters += DataParameter)+
	"}"
;

Session:
	"session" name = ID "{"
		(messages += Message)*
	"}"
;

Message:
	"message" "{"
		"timestamp" timestamp = LONG
		"sensor" sensor=[Sensor]
		"payload" payload=[Payload]
	"}"
;

terminal DOUBLE returns ecore::EDouble:
	INT "." INT
;

terminal BOOLEAN returns ecore::EBoolean:
	"true" | "false"
;

LONG returns ecore::ELong: INT+;

DataParameter:
	{IntParameter} "parameter" type = "int" name = ID ("=" value = INT)? ("(" criteria += Criterion (criteria += Criterion)* ")")? |
	{DoubleParameter} "parameter" type = "double" name = ID ("=" value = DOUBLE)? ("(" criteria += Criterion (criteria += Criterion)* ")")? |
	{StringParameter} "parameter" type = "string" name = ID ("=" value = STRING)? ("(" criteria += Criterion (criteria += Criterion)* ")")? |
	{BooleanParameter} "parameter" type = "boolean" name = ID ("=" value = BOOLEAN)? ("(" criteria += Criterion (criteria += Criterion)* ")")?
;

Criterion:
	{IntCriterion} prefix = ("min" | "max" | "eq" | "neq") value = INT |
	{DoubleCriterion} prefix = ("min" | "max" | "eq" | "neq") value = DOUBLE |
	{StringCriterion} prefix = ("eq" | "neq") value = STRING |
	{BooleanCriterion} prefix = ("eq" | "neq") value = BOOLEAN
;
	