/*
 * generated by Xtext 2.9.0-SNAPSHOT
 */
package org.eclipse.viatra.cep.mqtt.midl.validation

import org.eclipse.viatra.cep.mqtt.midl.mIDL.BooleanCriterion
import org.eclipse.viatra.cep.mqtt.midl.mIDL.DataParameter
import org.eclipse.viatra.cep.mqtt.midl.mIDL.DoubleCriterion
import org.eclipse.viatra.cep.mqtt.midl.mIDL.IntCriterion
import org.eclipse.viatra.cep.mqtt.midl.mIDL.MIDLPackage
import org.eclipse.viatra.cep.mqtt.midl.mIDL.StringCriterion
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class MIDLValidator extends AbstractMIDLValidator {
	
	@Check
	def checkParameterCriteriaType(DataParameter parameter) {
		for (criterion : parameter.criteria) {
			if (parameter.type == "int" && !(criterion instanceof IntCriterion)) {
				error("The criteria type must be int", MIDLPackage.Literals.DATA_PARAMETER__CRITERIA, "invalidCriteria")
			} else if(parameter.type == "double" && !(criterion instanceof DoubleCriterion)) {
				error("The criteria type must be double", MIDLPackage.Literals.DATA_PARAMETER__CRITERIA, "invalidCriteria")
			} else if(parameter.type == "string" && !(criterion instanceof StringCriterion)) {
				error("The criteria type must be string", MIDLPackage.Literals.DATA_PARAMETER__CRITERIA, "invalidCriteria")
			} else if(parameter.type == "boolean" && !(criterion instanceof BooleanCriterion)) {
				error("The criteria type must be boolean", MIDLPackage.Literals.DATA_PARAMETER__CRITERIA, "invalidCriteria")
			}
		}
	}
	
}
