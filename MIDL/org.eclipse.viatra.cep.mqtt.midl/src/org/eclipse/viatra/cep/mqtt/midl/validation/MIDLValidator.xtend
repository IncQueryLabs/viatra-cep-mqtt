/*
 * generated by Xtext 2.9.0.beta5
 */
package org.eclipse.viatra.cep.mqtt.midl.validation

import org.eclipse.viatra.cep.mqtt.midl.mIDL.BooleanCriterion
import org.eclipse.viatra.cep.mqtt.midl.mIDL.DataParameter
import org.eclipse.viatra.cep.mqtt.midl.mIDL.FloatCriterion
import org.eclipse.viatra.cep.mqtt.midl.mIDL.IntCriterion
import org.eclipse.viatra.cep.mqtt.midl.mIDL.MIDLPackage
import org.eclipse.viatra.cep.mqtt.midl.mIDL.StringCriterion
import org.eclipse.xtext.validation.Check

//import org.eclipse.xtext.validation.Check
/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class MIDLValidator extends AbstractMIDLValidator {

	@Check
	def checkParameterCriteriaType(DataParameter dataParameter) {
		for (criterion : dataParameter.criteria) {
			if (dataParameter.type == "int" && !(criterion instanceof IntCriterion)) {
				error("The criteria type must be int type", MIDLPackage.Literals.DATA_PARAMETER__CRITERIA, "invalidCriteria")
			} else if(dataParameter.type == "float" && !(criterion instanceof FloatCriterion)) {
				error("The criteria type must be float type", MIDLPackage.Literals.DATA_PARAMETER__CRITERIA, "invalidCriteria")
			} else if(dataParameter.type == "string" && !(criterion instanceof StringCriterion)) {
				error("The criteria type must be string type", MIDLPackage.Literals.DATA_PARAMETER__CRITERIA, "invalidCriteria")
			} else if(dataParameter.type == "boolean" && !(criterion instanceof BooleanCriterion)) {
				error("The criteria type must be boolean type", MIDLPackage.Literals.DATA_PARAMETER__CRITERIA, "invalidCriteria")
			}
		}
	}

}
